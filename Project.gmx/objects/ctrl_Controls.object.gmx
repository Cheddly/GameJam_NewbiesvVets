<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalvar ctrls;
ctrls = ctrl_Controls
key_left = ord('A')
key_right = ord('D')
key_up = ord('W')
key_down= ord('S')
key_form_prev = ord('Q')
key_form_next = ord('E')

gamepad=false
if gamepad_is_connected(0)
    {
    if show_question("Enable gamepad?")
        {
        gamepad=true
        key_left = gp_padl
        key_right = gp_padr
        key_up = gp_face1
        key_down = gp_padd
        key_form_prev = gp_shoulderl
        key_form_next = gp_shoulderr
        }
    }

room_goto_next()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(obj_player)
    {
    //FORM GUI
    var form = obj_player.form
    draw_sprite(hud_formselect,0,0,0)
    if form &gt; 0
    draw_sprite(hud_formselect,form,0,0)
    else
    draw_sprite(hud_formselect,3,0,0)
    
    if ctrls.gamepad
    draw_text(20,48,"LB")
    else
    draw_text(20,48,"Q")
    
    draw_sprite(hud_formselect,0,64,0)
    if form &lt; 2
    draw_sprite(hud_formselect,form+2,64,0)
    else
    draw_sprite(hud_formselect,1,64,0)
    
    if ctrls.gamepad
    draw_text(86,48,"RB")
    else
    draw_text(86,48,"E")
    
    //ENERGY
    draw_set_color(c_black)
    draw_rectangle(0,64,128,80,true)
    draw_set_color(c_gray)
    draw_rectangle(0,64,128,80,false)
    draw_set_color(c_aqua)
    draw_rectangle(0,64,128*(obj_player.energy/100),80,false)
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
