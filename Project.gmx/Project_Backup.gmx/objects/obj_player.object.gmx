<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hsp=0
vsp=0
grav=.5
form = FORM_WATER
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement 
var ctrls = ctrl_Controls
//Move left and right
var key_hsp;
key_hsp = keyboard_check(ctrls.key_right)-keyboard_check(ctrls.key_left)
if (key_hsp) == 0
    {hsp/=1.2}
else
    {hsp=key_hsp*4}
    
//Jump and gravity
var vsp_jump;
if (place_meeting(x,y+1,par_ground)) and keyboard_check_pressed(ctrls.key_up)
    {
    vsp=-12
    }
else
    {
    vsp = min(vsp+grav,12)
    }

//Collision with the ground
if (place_meeting(x,y+vsp,par_wall))
    {
    while (!place_meeting(x,y+sign(vsp),par_wall)) {y+=sign(vsp)}
    vsp=0
    }
//Collision on the side
if (place_meeting(x+hsp,y,par_wall))
    {
    while (!place_meeting(x+sign(hsp),y,par_wall)) {x+=sign(hsp)}
    hsp=0
    }
//Collision with the platform
if (place_meeting(x,y+vsp,par_platform))
    {
    var plat = instance_place(x,y+vsp,par_platform)
    if (plat.y &gt; y+31)
        {
        while (!place_meeting(x,y+sign(vsp),par_platform)) {y+=sign(vsp)}
        vsp=0
        }
    }


x=x+hsp
y=y+vsp
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x=xstart
y=ystart
hsp=0
vsp=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
