<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hsp=2
vsp=0
grav=.5
state = AI_IDLE
animation = ANIM_STAND
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Recover end
state = AI_IDLE
hsp = image_xscale*2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
//reverse if neccessary
if place_meeting(x+hsp,y,obj_enemyreverse) and state != AI_RECOVER
    {
    hsp=hsp*-1
    state = AI_IDLE
    }
//State change
    var maxview=480
if instance_exists(obj_player) and state != AI_RECOVER
{
if state == AI_FOLLOW
    {
    //do stuff
    if distance_to_object(obj_player) &gt; maxview*3/2
        state = AI_IDLE
    }
else
    {
    hsp=median(-2,hsp,2)
    if point_in_triangle(obj_player.x,obj_player.y,x,y,x+sign(hsp)*maxview,y+64,x+sign(hsp)*maxview, y-32)
        {
        hsp*=2
        state = AI_FOLLOW
        }
    }
}    
else if state != AI_RECOVER
{
state = AI_IDLE
}
else
{
    hsp/=1.05
}
//Jump and gravity
    /*
    var vsp_jump;
    if (place_meeting(x,y+1,par_ground)) and check_key(ctrls.key_up,1)
        {
        vsp=-12
        }
    else*/
        {
        vsp = min(vsp+grav,12)
        }

//Collision with the ground
if (place_meeting(x,y+vsp,par_wall))
    {
    while (!place_meeting(x,y+sign(vsp),par_wall)) {y+=sign(vsp)}
    vsp=0
    }
//Collision on the side
if (place_meeting(x+hsp,y,par_wall))
    {
    while (!place_meeting(x+sign(hsp),y,par_wall)) {x+=sign(hsp)}
    hsp=0
    }
//Collision with the platform
if (place_meeting(x,y+vsp,par_platform))
    {
    var plat = instance_place(x,y+vsp,par_platform)
    if (plat.y &gt; y+31)
        {
        while (!place_meeting(x,y+sign(vsp),par_platform)) {y+=sign(vsp)}
        vsp=0
        }
    }


x=x+hsp
y=y+vsp
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with player
if (place_meeting(x,y,obj_player))
    {
    if obj_player.form == FORM_ICE and abs(obj_player.hsp) &gt;= abs (hsp) and state != AI_RECOVER   
        {
        ///pushed back
        state = AI_RECOVER
        hsp = obj_player.hsp*1.5
        vsp = -8
        alarm[1]=90
        }
    else if obj_player.invincible==0
        {
        obj_player.hsp = sign(obj_player.x-x)*hsp*1.5
        obj_player.vsp = -8
        if obj_player.alarm[10] == -1
            {
            obj_player.alarm[10]=1
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sprites
if animation == ANIM_STAND
    {
    sprite_index = spr_enemy
    }
else
    {
    sprite_index = spr_enemy
    }
if hsp &lt; 0
    image_xscale=-1
else if hsp &gt; 0
    image_xscale=1
draw_self()

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
